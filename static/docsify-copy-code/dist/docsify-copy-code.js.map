{"version":3,"file":"docsify-copy-code.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// Dependencies\n// =============================================================================\n// eslint-disable-next-line no-unused-vars\nimport styles from './styles.css';\n\n\n// Plugin\n// =============================================================================\nfunction docsifyCopyCode(hook, vm) {\n    hook.doneEach(function() {\n        const codeBlocks = Array.apply(null, document.querySelectorAll('pre[v-pre]'));\n\n        codeBlocks.forEach(function(element, i, obj) {\n            const button = document.createElement('button');\n\n            button.appendChild(document.createTextNode('Click to copy'));\n            button.classList.add('docsify-copy-code-button');\n\n            if (vm.config.themeColor) {\n                button.style.background = vm.config.themeColor;\n            }\n\n            button.addEventListener('click', function(event) {\n                const range = document.createRange();\n                const codeBlock = element.querySelector('code');\n\n                let selection = window.getSelection();\n\n                range.selectNode(codeBlock);\n                selection.removeAllRanges();\n                selection.addRange(range);\n\n                try {\n                    // Now that we've selected the anchor text, execute the copy command\n                    const successful = document.execCommand('copy');\n\n                    if (successful) {\n                        button.classList.add('success');\n                        setTimeout(function() {\n                            button.classList.remove('success');\n                        }, 1000);\n                    }\n                } catch (err) {\n                    button.classList.add('error');\n                    setTimeout(function() {\n                        button.classList.remove('error');\n                    }, 1000);\n                }\n\n                selection = window.getSelection();\n\n                if (typeof selection.removeRange === 'function') {\n                    selection.removeRange(range);\n                } else if (typeof selection.removeAllRanges === 'function') {\n                    selection.removeAllRanges();\n                }\n            });\n\n            element.appendChild(button);\n        });\n    });\n}\n\n// Deprecation warning for v1.x: stylesheet\nif (document.querySelector('link[href*=\"docsify-copy-code\"]')) {\n    // eslint-disable-next-line\n    console.warn('[Deprecation] Link to external docsify-copy-code stylesheet is no longer necessary.');\n}\n\n// Deprecation warning for v1.x: init()\nwindow.DocsifyCopyCodePlugin = {\n    init: function() {\n        return function(hook, vm) {\n            hook.ready(function() {\n                // eslint-disable-next-line\n                console.warn('[Deprecation] Manually initializing docsify-copy-code using window.DocsifyCopyCodePlugin.init() is no longer necessary.');\n            });\n        };\n    }\n};\n\nwindow.$docsify = window.$docsify || {};\nwindow.$docsify.plugins = [docsifyCopyCode].concat(window.$docsify.plugins || []);\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","docsifyCopyCode","hook","vm","doneEach","codeBlocks","Array","apply","querySelectorAll","forEach","element","i","obj","button","classList","add","config","themeColor","background","addEventListener","event","range","createRange","codeBlock","querySelector","selection","window","getSelection","selectNode","removeAllRanges","addRange","successful","execCommand","remove","err","removeRange","warn","DocsifyCopyCodePlugin","ready","$docsify","plugins","concat"],"mappings":";;;;;;;;;IAAA,SAASA,YAAYC,KAAKC;QACxB,IAAKA,aAAa,GAAIA;QACtB,IAAIC,WAAWD,IAAIC;QAEnB,KAAKF,cAAcG,aAAa,aAAa;YAAE;;QAE/C,IAAIC,OAAOD,SAASC,QAAQD,SAASE,qBAAqB,QAAQ;QAClE,IAAIC,QAAQH,SAASI,cAAc;QACnCD,MAAME,OAAO;QAEb,IAAIN,aAAa,OAAO;YACtB,IAAIE,KAAKK,YAAY;gBACnBL,KAAKM,aAAaJ,OAAOF,KAAKK;mBACzB;gBACLL,KAAKO,YAAYL;;eAEd;YACLF,KAAKO,YAAYL;;QAGnB,IAAIA,MAAMM,YAAY;YACpBN,MAAMM,WAAWC,UAAUb;eACtB;YACLM,MAAMK,YAAYR,SAASW,eAAed;;;;;ICf9C,SAASe,gBAAgBC,MAAMC;aACtBC,SAAS;gBACJC,aAAaC,MAAMC,MAAM,MAAMlB,SAASmB,iBAAiB;uBAEpDC,QAAQ,SAASC,SAASC,GAAGC;oBAC9BC,SAASxB,SAASI,cAAc;uBAE/BI,YAAYR,SAASW,eAAe;uBACpCc,UAAUC,IAAI;oBAEjBZ,GAAGa,OAAOC,YAAY;2BACfzB,MAAM0B,aAAaf,GAAGa,OAAOC;;uBAGjCE,iBAAiB,SAAS,SAASC;wBAChCC,QAAQhC,SAASiC;wBACjBC,YAAYb,QAAQc,cAAc;wBAEpCC,YAAYC,OAAOC;0BAEjBC,WAAWL;8BACPM;8BACAC,SAAST;;4BAITU,aAAa1C,SAAS2C,YAAY;4BAEpCD,YAAY;mCACLjB,UAAUC,IAAI;uCACV;uCACAD,UAAUmB,OAAO;+BACzB;;sBAET,OAAOC;+BACEpB,UAAUC,IAAI;mCACV;mCACAD,UAAUmB,OAAO;2BACzB;;gCAGKP,OAAOC;+BAERF,UAAUU,gBAAgB,YAAY;kCACnCA,YAAYd;2BACnB,WAAWI,UAAUI,oBAAoB,YAAY;kCAC9CA;;;wBAIVhC,YAAYgB;;;;IAMhC,IAAIxB,SAASmC,cAAc,oCAAoC;gBAEnDY,KAAK;;IAIjBV,OAAOW;cACG;mBACK,SAASnC,MAAMC;qBACbmC,MAAM;4BAECF,KAAK;;;;;IAM7BV,OAAOa,WAAWb,OAAOa;IACzBb,OAAOa,SAASC,YAAWvC,kBAAiBwC,OAAOf,OAAOa,SAASC;"}